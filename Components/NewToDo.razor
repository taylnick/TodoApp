@code {
    [Parameter]
    public EventCallback<Item> OnNewItemAdded { get; set; }

    private string newItemDescription = string.Empty;

    private async void HandleKeyPress(KeyboardEventArgs e)
    {
        if ((e.Key == "Enter" || e.Key == "NumpadEnter"))
        {
            await AddNewItem();
            newItemDescription = string.Empty;
            StateHasChanged();
        }
    }

    private async Task AddNewItem()
    {
        if (!string.IsNullOrEmpty(newItemDescription))
        {
            var newItem = new Item { Description = newItemDescription };
            await OnNewItemAdded.InvokeAsync(newItem);
        }
    }

    private void Cancel()
    {
        newItemDescription = string.Empty;
    }
}

<div class="new-todo">
    <input type="text" @bind="newItemDescription" @bind:event="oninput" @onkeypress="HandleKeyPress" placeholder="Enter new task . . " />
    @* <button @onclick="Cancel">Cancel</button> *@
</div>

<style>
    .new-todo {
        display: flex;
        align-items: center;
    }

    .new-todo input {
        flex: 1;
        margin-right: 10px;
    }

    .new-todo button {
        padding: 5px 10px;
    }
</style>
